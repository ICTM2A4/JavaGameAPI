// <auto-generated />
using System;
using JavaGameAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JavaGameAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200511135103_scoredOn")]
    partial class scoredOn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JavaGameAPI.Models.Achievement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("Achievement");
                });

            modelBuilder.Entity("JavaGameAPI.Models.Level", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("Creatorid")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.HasIndex("Creatorid");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("JavaGameAPI.Models.Score", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("ScoreAmount")
                        .HasColumnType("double");

                    b.Property<int?>("ScoredOnID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Userid")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ScoredOnID");

                    b.HasIndex("Userid");

                    b.ToTable("Score");
                });

            modelBuilder.Entity("JavaGameAPI.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JavaGameAPI.Models.Level", b =>
                {
                    b.HasOne("JavaGameAPI.Models.User", "Creator")
                        .WithMany("Levels")
                        .HasForeignKey("Creatorid");
                });

            modelBuilder.Entity("JavaGameAPI.Models.Score", b =>
                {
                    b.HasOne("JavaGameAPI.Models.Level", "ScoredOn")
                        .WithMany("Scores")
                        .HasForeignKey("ScoredOnID");

                    b.HasOne("JavaGameAPI.Models.User", "User")
                        .WithMany("Scores")
                        .HasForeignKey("Userid");
                });
#pragma warning restore 612, 618
        }
    }
}
